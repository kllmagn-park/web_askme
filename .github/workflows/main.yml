name: Run server
on: workflow_dispatch

jobs:
  run_server:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          pacman --noconfirm -Syu sudo
          sudo pacman --noconfirm -S python python-pip unzip nginx postgresql memcached python-psycopg2 wget
          #sudo pip install pipreqs
          sudo pip install django django-cleanup django-cachalot gunicorn pillow
          cd $GITHUB_WORKSPACE
          #sudo unzip .venv.zip > /dev/null
          #sudo pipreqs .venv
          #sudo chmod -R 755 .venv
          #source .venv/bin/activate
      - name: PostgreSQL Setup
        run: |
          su postgres -c 'initdb -D /var/lib/postgres/data'
          echo 'Running PostgreSQL server...'
          sudo mkdir -p /run/postgresql
          sudo sudo chown -R postgres:postgres /run/postgresql/
          su postgres -c '/usr/bin/postgres -D /var/lib/postgres/data &'
          #sleep 10
          #echo 'Creating database...'
          #su postgres -c 'createdb postgres'
      - name: Run memcached
        run: |
          sudo memcached -u root &
      - name: Prepare Server
        run: |
          sudo mkdir logs
      - name: Ngrok
        run: |
            sudo wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.tgz
            sudo tar xvzf ngrok-stable-linux-amd64.tgz -C /usr/local/bin
            sudo ngrok authtoken bVGXV29rGqZaA2dd79tL_MR5BzrT33v1MTkgeMKMw
            sudo ngrok http 8000 &
            sudo curl http://127.0.0.1:4040/api/tunnels
      - name: Run Server
        run: |
          python manage.py runserver
