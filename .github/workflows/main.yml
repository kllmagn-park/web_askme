name: Run server
on: workflow_dispatch

jobs:
  run_server:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup
        run: |
          pacman --noconfirm -Syu sudo
          sudo pacman --noconfirm -S python python-pip unzip postgresql memcached python-psycopg2 wget git gcc make
          #sudo pip install pipreqs
          sudo pip install django django-cleanup django-cachalot gunicorn pillow django-pgtrigger pymemcache mimesis nltk
          cd $GITHUB_WORKSPACE
          #sudo unzip .venv.zip > /dev/null
          #sudo pipreqs .venv
          #sudo chmod -R 755 .venv
          #source .venv/bin/activate
          
      - name: PostgreSQL Setup
        run: |
          su postgres -c 'initdb -D /var/lib/postgres/data'
          echo 'Running PostgreSQL server...'
          sudo mkdir -p /run/postgresql
          sudo sudo chown -R postgres:postgres /run/postgresql/
          su postgres -c '/usr/bin/postgres -D /var/lib/postgres/data &'
          #sleep 10
          #echo 'Creating database...'
          #su postgres -c 'createdb postgres'
          
      - name: Nginx Setup
        run: |
          # clone the project
          git clone https://github.com/wandenberg/nginx-push-stream-module.git
          NGINX_PUSH_STREAM_MODULE_PATH=$PWD/nginx-push-stream-module
          wget http://nginx.org/download/nginx-1.19.9.tar.gz
          # unpack, configure and build
          tar xzvf nginx-1.19.9.tar.gz
          cd nginx-1.19.9
          ./configure --add-module=../nginx-push-stream-module
          make
          # install and finish
          sudo make install
          # check
          sudo /usr/local/nginx/sbin/nginx -v

      - name: Run memcached
        run: |
          sudo memcached -u root &
          
      - name: Prepare Server
        run: |
          sudo mkdir logs
          sudo mkdir -p /var/www/static
          sudo python manage.py makemigrations
          sudo python manage.py migrate
          #sudo cp -r static /var/www/static
          
      - name: Fill DB
        run: |
          sudo python ./fill_db.py
          
      - name: Ngrok
        run: |
            sudo wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.tgz
            sudo tar xvzf ngrok-stable-linux-amd64.tgz -C /usr/local/bin
            sudo ngrok authtoken bVGXV29rGqZaA2dd79tL_MR5BzrT33v1MTkgeMKMw
            sudo ngrok http 8080 -host-header="localhost:8080" &
            sleep 5
            sudo curl http://127.0.0.1:4040/api/tunnels
            
      - name: Run Server
        run: |
          sleep 10
          sudo gunicorn --workers=1 --threads=2 --worker-connections=1000 -b unix:/var/www/askme.sock main_wsgi --daemon
          sleep 5
          ls
          sudo /usr/local/nginx/sbin/nginx -c `pwd`/nginx.conf -p "`pwd`" -g 'daemon off;'
          
